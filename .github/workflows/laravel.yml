name: Laravel

on:
  push:
    branches: [ "production" ]
  pull_request:
    branches: [ "production" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2.12'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Composer ClearCache
      run: composer clearcache
    - name: Composer Self-Update
      run: composer selfupdate
    - name: Composer Install
      run: composer install --ignore-platform-reqs
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
      
  deploy:
      runs-on: ubuntu-latest

      needs: build

      steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
  
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.6.1
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          config: ${{ secrets.CONFIG }} # ssh_config; optional
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
          
      - name: rsync over SSH
        run: rsync -r ./foo/ user@remote:bar/
            
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  
      - name: Deploy to Production
        run: scp -r ./ ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:/path/to/your/laravel
  
      - name: SSH into Server
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} 'cd /path/to/your/laravel && composer install --optimize-autoloader && php artisan migrate --force && php artisan config:cache && php artisan route:cache'
